/** @jsxImportSource theme-ui */
import Head from 'next/head';
import {useState} from 'react';

import {getClient} from '@lib/sanity.server';

import Header from '@components/header';
import Tracker from '@components/tracker';
import CollectionPreview from '@components/collection-preview';
import QuickPost from '@components/quick-post';

export default function Home({data}) {
  const [showProgress, setShowProgress] = useState(true);
  const {posts, tracker} = data;

  function renderContent({_type, _id, ...rest}) {
    switch (_type) {
      case 'collection':
        return <CollectionPreview key={_id} {...rest} />;
      case 'quickPost':
        return <QuickPost key={_id} {...rest} />;
      default:
        return null;
    }
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header
        toggleProgress={() => {
          setShowProgress((p) => !p);
        }}
      />
      <div sx={{variant: 'fullGrid'}}>
        <main sx={{variant: 'fullGrid.contentCol'}}>
          {posts && posts.map(renderContent)}
        </main>
        {/* <aside sx={{gridColumn: 'auto / span 5'}}>
          {tracker && <Tracker visible={showProgress} {...tracker} />}
        </aside> */}
      </div>

      <footer></footer>
    </div>
  );
}

export async function getStaticProps() {
  const allPostsQuery = `
    {
      "posts": *[_type in ["quickPost", 'collection']] | order(publishedAt asc) {
        ...,
        _type == "quickPost" => {
          tags[]->,
        },
        _type == "collection" => {
          posts[]->,
          type->
        }
      },
      "tracker": *[_type == 'progressTracker'][0] {
        ...,
        items 
      }
    }
  `;
  const data = await getClient().fetch(allPostsQuery);
  return {
    props: {
      data,
    },
  };
}
