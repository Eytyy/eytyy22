/** @jsxImportSource theme-ui */
import Head from 'next/head';
import {PortableText} from '@portabletext/react';
import {getClient} from '@lib/sanity.server';
import Header from '@components/header';
import myPortableTextComponents from '@lib/portablet-text-component';

export default function Home({data}) {
  function getFormatedDate(date) {
    const fd = new Date(date);
    return `${fd.getDate()}-${fd.getMonth()}-${fd.getFullYear()} ${fd.getHours()}:${fd.getMinutes()}`;
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main>
        <div sx={{variant: 'wrapper.fixed'}}>
          {data &&
            data.map(({_id, publishedAt, tags, body, title, finished}) => (
              <div sx={{mb: [9]}} key={_id}>
                <div sx={{mb: 6, variant: 'text.meta'}}>
                  {typeof finished !== 'undefined' && !finished && (
                    <div>
                      <span
                        sx={{
                          background: 'red',
                          color: '#fff',
                          mb: 4,
                          display: 'inline-block',
                          padding: 2,
                          fontFamily: 'heading',
                          letterSpacing: 1,
                        }}
                      >
                        {' '}
                        {`Draft`}
                      </span>
                    </div>
                  )}
                  <h2
                    sx={{
                      variant: 'text.postTitle',
                    }}
                  >
                    {title}
                  </h2>
                  {publishedAt && (
                    <time sx={{}} dateTime={publishedAt}>
                      {getFormatedDate(publishedAt)}
                    </time>
                  )}
                  {tags && (
                    <span sx={{ml: 4}}>
                      tags:{' '}
                      {tags.map((tag) => (
                        <span
                          sx={{mr: 3, borderBottom: '1px solid'}}
                          key={tag._id}
                        >{`#${tag.title}`}</span>
                      ))}
                    </span>
                  )}
                </div>
                {body && (
                  <div sx={{variant: 'text.body', maxWidth: '80ch'}}>
                    <PortableText
                      value={body}
                      components={myPortableTextComponents}
                    />
                  </div>
                )}
              </div>
            ))}
        </div>
      </main>
      <footer></footer>
    </div>
  );
}

export async function getStaticProps() {
  const allPostsQuery = `
    *[_type in ["quickPost", 'post']] | order(publishedAt asc) {
      ...,
      tags[]->
    }
  `;
  const data = await getClient().fetch(allPostsQuery);
  return {
    props: {
      data,
    },
  };
}
